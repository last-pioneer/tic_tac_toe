import time
import random as rd

"""
Моя первая самостоятельная программа, тут я буду строить модель программы
"""


def greetings():
    """
    Эта функция будет приветствовать игроков и знакомить с правилами игры.
    :return:
    """

    def priority():
        r = rd.randint(1, 10)
        if r % 2 == 0:
            return True
        else:
            return False

    print('\n' * 10)
    print('                                 Вас приветствует игра крестики-нолики!')
    print(
        '\n' * 2 + 'Правила игры очень простые, игрок должен ставить свой ход так, чтобы образовать линию из трех Х в ряд')
    print('по вертикали, горизонтали или диагонали и не дать противнику выстроить свои О в такую линию. ')
    print('Игроки ходят по очереди, для того чтоб сделать ход надо нажать на клавишу с номером ячейки')
    print('в которую хотите сделать ход. Игра завершается когда один из игроков образует линию из 3 значков.')
    print('Если игрокам не удалось выстроить линию, а все поля заняты, то объявляется  - ничья.')
    scip = input('Если вы ознакомились с правилами и готовы играть нажмите "Ввод"')
    print('\n''Давайте познакомимся')
    name_1 = input('Игрок 1, введите имя: ')
    name_2 = input('Игрок 2, введите имя: ')
    print('\n' * 100)
    print('Чудесно, ' + name_1 + ' и ' + name_2 + ' теперь мы случайно определим кто ходит первым.')
    time.sleep(2)
    if priority() is True:
        pass
        # gamers = (name_1, name_2)
    else:
        name_1, name_2 = name_2, name_1
        # gamers = (name_1, name_2)
    # print('Первым ходит: ' + gamers[0] + '   Вторым ходит: ' + gamers[1])
    print('Первым ходит: ' + name_1 + '   Вторым ходит: ' + name_2)
    time.sleep(2)
    print('\n' * 100)
    return name_1, name_2


def playing_field(gamer_1, s_g_1, gamer_2, s_g_2, s_g_0, p):
    """
    эта функция будет создавать, обновлять и отрисовывать изменения на игровом поле.
    print('\n'*100) --> Рисует 100 пустых строк, тем самым затирая все что было в 100 строках
    :return:(p)
    """
    print('\n' * 10)
    print('     Крестики нолики 1.0')
    print('   ' + str(s_g_0) + ' - игр сыграно в ничью')
    print('   ' + str(s_g_1) + ' - игр выиграл ' + gamer_1)
    print('   ' + str(s_g_2) + ' - игр выиграл ' + gamer_2)
    print('\n')
    print('   |       |       |       |')
    print('   |   ' + p[6] + '   |   ' + p[7] + '   |   ' + p[8] + '   |    7    8    9')
    print('   |       |       |       |')
    print('   -------------------------')
    print('   |       |       |       |')
    print('   |   ' + p[3] + '   |   ' + p[4] + '   |   ' + p[5] + '   |    4    5    6')
    print('   |       |       |       |')
    print('   -------------------------')
    print('   |       |       |       |')
    print('   |   ' + p[0] + '   |   ' + p[1] + '   |   ' + p[2] + '   |    1    2    3')
    print('   |       |       |       |')
    print('\n' * 3)
    x = input('Следующий ход: ' + gamer_1 + ', сделайте свой ход, нажмите кнопку 1-9 : ')
    y = '123456789'
    if x in y:
        x = int(x)
        if p[x-1] != ' ':
            print('Клеточка занята, выберите цифру не занятой клеточки!')
            time.sleep(2)
            playing_field(gamer_1, s_g_1, gamer_2, s_g_2, s_g_0, p)
        else:
            p.insert(x - 1, 'Х')
            return p

    else:
        print('Вы ввели не правильное число, введите цифру от 1 до 9.')
        time.sleep(2)
        playing_field(gamer_1, s_g_1, gamer_2, s_g_2, s_g_0, p)
    ''' 
    тут надо подставить имя игрока который должен ходить
    
    '''


def player_turn(gamer_1, gamer_2, p):
    playing_field(gamer_1, 5, gamer_2, 2, 6, p)


def game_master(gamer_1, gamer_2):
    """
    Эта функция будет контролировать игровой процесс.
    р - это список значений полей игры, для определения правильности ходов, ничьей или победы.
    s_g_0 - переменная будет хранить кол-во игр сыгранных в ничью
    s_g_1 - переменная будет хранить кол-во игр выигранных игроком_1
    s_g_2 - переменная будет хранить кол-во игр выигранных игроком_2

    :return:
    """
    p = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']
    s_g_0 = 0
    s_g_1 = 0
    s_g_2 = 0
    while p.count(' ') != 0:
        player_turn(gamer_1, gamer_2, p)


# gamer_1, gamer_2 = greetings()
# playing_field(gamer_1, gamer_2)

gamer_1, gamer_2 = greetings()
game_master(gamer_1, gamer_2)
